{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","Context.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","MovieContext","React","createContext","setMovie","isLoading","setIsLoading","MovieProvider","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","value","Provider","FindMovie","addToTheList","setTitle","error","setError","fmBUtton","length","_useContext","useContext","_Fragment","onSubmit","event","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","mov","dataFromServer","poster","Poster","Title","Plot","imdbID","transformDataMovie","finally","htmlFor","type","id","placeholder","classNames","onChange","e","target","disabled","onClick","undefined","App","setMovies","moviePre","filter","newList","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.964cc7f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie?: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport { Movie } from './types/Movie';\n\ntype ContProps = {\n  movie: Movie | undefined;\n  setMovie: (mov: Movie | undefined) => void,\n  isLoading: boolean;\n  setIsLoading: (arg: boolean) => void,\n};\n\nexport const MovieContext = React.createContext<ContProps>({\n  movie: {} as Movie,\n  setMovie: () => {},\n  isLoading: false,\n  setIsLoading: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport const MovieProvider: React.FC<Props> = ({ children }) => {\n  const [movie, setMovie] = useState<Movie>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const value = {\n    movie,\n    setMovie,\n    isLoading,\n    setIsLoading,\n  };\n\n  return (\n    <MovieContext.Provider value={value}>\n      {children}\n    </MovieContext.Provider>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { MovieContext } from '../../Context';\n\ntype Props = {\n  addToTheList: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addToTheList }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const fmBUtton = title.length === 0;\n  const {\n    movie, setMovie, isLoading, setIsLoading,\n  } = useContext(MovieContext);\n\n  const transformDataMovie = (dataFromServer: MovieData | ResponseError)\n  : Movie | undefined => {\n    if ('Title' in dataFromServer) {\n      let poster = '';\n\n      if (dataFromServer.Poster.length === 3) {\n        poster = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n      } else {\n        poster = dataFromServer.Poster;\n      }\n\n      return {\n        title: dataFromServer.Title,\n        description: dataFromServer.Plot,\n        imgUrl: poster,\n        imdbUrl: `https://www.imdb.com/title/${dataFromServer.imdbID}`,\n        imdbId: dataFromServer.imdbID,\n      };\n    }\n\n    setError(true);\n\n    return undefined;\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    getMovie(title).then(mov => {\n      setMovie(transformDataMovie(mov));\n    }).finally(() => setIsLoading(false));\n  };\n\n  const handleAddToTheList = () => {\n    if (movie !== undefined) {\n      addToTheList(movie);\n      setMovie(undefined);\n      setTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                'input is-danger': error,\n                'input ': !error,\n              })}\n              value={title}\n              onChange={(e) => {\n                if (title.length) {\n                  setError(false);\n                }\n\n                setTitle(e.target.value);\n              }}\n            />\n          </div>\n\n          {error ? (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) : null}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', {\n                'is-light': !isLoading,\n                'is-loading': isLoading,\n              })}\n              disabled={fmBUtton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie ? (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddToTheList}\n              >\n                Add to the list\n              </button>\n            </div>\n          ) : null}\n        </div>\n      </form>\n\n      {movie ? (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      ) : null}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ff03549b';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useContext, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { MovieContext, MovieProvider } from './Context';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const { setMovie } = useContext(MovieContext);\n\n  const addToTheList = (moviePre: Movie) => {\n    const isMovie = movies.filter(mov => mov.imdbId === moviePre.imdbId);\n\n    if (isMovie.length) {\n      return setMovie(undefined);\n    }\n\n    const newList = [...movies, moviePre];\n\n    return setMovies(newList);\n  };\n\n  return (\n    <div className=\"page\">\n      <MovieProvider>\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n\n        <div className=\"sidebar\">\n          <FindMovie addToTheList={addToTheList} />\n        </div>\n      </MovieProvider>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}